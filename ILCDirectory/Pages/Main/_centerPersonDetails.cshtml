@model PersonFamilyAddressDetails
<div class="container">
    <div class="row bg-light">
        <div class="row row-cols-sm-1 row-cols-lg-1 row-cols-xl-2 g-3 m-3">
            <div class="col"><div class="row"><div class="col float-start">PersonId equal to null: </div><div class="col float-end">@(Model.Person == null)</div></div></div>
            <div class="col"><div class="row"><div class="col float-start">Name (first middle last): </div><div class="col float-end">@Model.Person.FirstName @Model.Person.MiddleName @Model.Person.LastName</div></div></div>
            <div class="col"><div class="row"><div class="col float-start">Maiden Name: </div><div class="col float-end">@Model.Person.MaidenName</div></div></div>
            <div class="col"><div class="row"><div class="col float-start">Nickname: </div><div class="col float-end">@Model.Person.NickName</div></div></div>
            <div class="col"><div class="row"><div class="col float-start">Marital Status: </div><div class="col float-end">@Model.Person.MaritalStatus</div></div></div>
            <div class="col"><div class="row"><div class="col float-start">Date of Birth: </div><div class="col float-end">@(Model.Person.DateOfBirth?.ToString("MM/dd/yyyy") ?? "not specified")</div></div></div>
        </div>
    </div>
    @if (Model.PersonAddressDetails != null && Model.PersonAddressDetails.HouseholdAddresses != null)
    {
        <div class="row">
            <div class="p-2 g-1 my-2 h2">
                Addresses
            </div>
        </div>
        @foreach (var ha in Model.PersonAddressDetails.HouseholdAddresses)
        {
            var isCurrent = (ha.ArrivalDate == null || ha.ArrivalDate <= DateTime.Now) && (ha.DepartureDate == null || ha.DepartureDate >= DateTime.Now);
            var dateBackground = isCurrent ? "bg-success bg-opacity-25" : ""; <!-- green background (lightened by lower opacity) for current address -->
            <div class="row row-cols-sm-1 row-cols-lg-2 row-cols-xl-3 g-3 m-3">
                <!-- make a new div for each address -->
                <div class="col bg-light rounded-3 m-1">
                    <div class="row">
                        @if (isCurrent)
                        {
                            <div class="col float-start @dateBackground">Current Address</div>
                        }
                        else
						{
							<div class="col float-start">Historical Address</div>
						}
                        <!-- use pencil icon with alt text of edit -->
                        <div class="col float-end text-end">
							<a href="">
                                <span><i style="color:darkblue;" class="fa-solid fa-pencil"></i></span>
							</a>
                        </div>
                    </div>
                    <div class="row">
                        <span>Arrival Date: @(ha.ArrivalDate?.ToString("MM/dd/yyyy") ?? "")</span>
                    </div>
                    <div class="row">
                        <span>Departure Date: @(ha.DepartureDate?.ToString("MM/dd/yyyy") ?? "")</span>
                    </div>
                    <div class="row">
                        <span>Is Permanent: @ha.IsPermanent</span>
                    </div>
                    <div class="row">
                        <span>Include in Directory: @ha.IncludeInDirectory</span>
                    </div>
                    <div class="row">
                        <span>Mail Only: @ha.MailOnly</span>
                    </div>
                </div>

                @if (ha.Address != null)
                {
                    <!-- make a new div for each address -->
                    <div class="col bg-light rounded-3 m-1">
                        <!-- make nested rows for each address line -->

                        <div class="row">
							<span>@ha.Address.AddressLine1</span>
                        </div>
                        @if (!string.IsNullOrEmpty(ha.Address.AddressLine2))
                        {
                            <div class="row">
                                <span>@ha.Address.AddressLine2</span>
                            </div>
                        }
                        <div class="row">
                            <span>@ha.Address.City</span>
                        </div>
                        <div class="row">
                            <span>@ha.Address.StateProvince</span> <span>@ha.Address.PostalCode</span>
                        </div>
                    </div>
                }
                
                @if (ha.InternalAddress != null)
                {
                    <!-- make a new div for each address -->
                    <div class="col bg-light rounded-3">
                        <!-- make nested rows for each address line -->

                        <div class="row">
                            <h2>Internal Address with date range goes here</h2>
                        </div>
                        <div class="row">
                            <span>Box#: @ha.InternalAddress.BoxNumber</span>
                        </div>
                        <div class="row">
                            <span>Spec Hdlg: @ha.InternalAddress.SpecialHandling</span>
                        </div>
                        <div class="row">
                            <span>Incl in Sort: @ha.InternalAddress.IncludeInSort</span>
                        </div>
                        @if (ha.InternalAddress.DeliveryCode != null)
                        {
                            <div class="row">
                                <span>Delivery Code: @ha.InternalAddress.DeliveryCode</span>
                            </div>
                        }
                        <div class="row">
                            <span>Mail List Flg: @ha.InternalAddress.MailListFlag</span>
                        </div>
                    </div>
                }
            </div> 
        }
    }
    <div class="modal fade" id="householdAddressModal-@Model.Person.PersonId" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel-@Model.Person.PersonId" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel-@Model.Person.PersonId">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input class="modalTextInput form-control" placeholder="Text Here" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="saveEdit btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <table class="table table-bordered">
        <tbody>
            <tr>
                <td>Some data here</td>
                <td>
                    <button class="btn btn-success btn-sm" data-id="1" data-toggle="modal" data-target="#householdAddressModal-@Model.Person.PersonId">Edit</button>
                </td>
            </tr>
            <tr>
                <td>Another data here</td>
                <td>
                    <button class="btn btn-success btn-sm" data-id="2" data-toggle="modal" data-target="#householdAddressModal-@Model.Person.PersonId">Edit</button>
                </td>
            </tr>
            <tr>
                <td>More data here</td>
                <td>
                    <button class="btn btn-success btn-sm" data-id="3" data-toggle="modal" data-target="#householdAddressModal-@Model.Person.PersonId">Edit</button>
                </td>
            </tr>
        </tbody>
    </table>

    <p class="recentNote"></p>

    <script type="text/javascript">

        $(function () {
            $('#householdAddressModal@(Model.Person.PersonId)').on('show.bs.modal', function (e) {
                $('.modalTextInput').val('');
                let btn = $(e.relatedTarget); // e.related here is the element that opened the modal, specifically the row button
                let id = btn.data('id'); // this is how you get the value of any `data` attribute of an element
                $('.saveEdit').data('id', id); // then pass it to the button inside the modal
            })

            $('.saveEdit').on('click', function () {
                let id = $(this).data('id'); // the rest is just the same
                saveNote(id);
                $('#householdAddressModal@(Model.Person.PersonId)').modal('toggle'); // this is to close the modal after clicking the modal button
            })
        })

        function saveNote(id) {
            let text = $('.modalTextInput').val();
            $('.recentNote').data('note', text);
            console.log($('.recentNote').data('note'));
            console.log(text + ' --> ' + id);
        }
    </script>
</div>
